/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.awt.Color;

/**
 *
 * @author garciparedes
 */
public class View extends javax.swing.JFrame {

    private Controller controller;
    /**
     * Creates new form View
     */
    public View() {
        controller = new Controller(this);
        initComponents();
        myInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar = new javax.swing.JToolBar();
        jButtonLoadFile1 = new javax.swing.JButton();
        jButtonLoadFile2 = new javax.swing.JButton();
        jLayeredPanelGrid = new javax.swing.JLayeredPane();
        jScrollPaneLeft = new javax.swing.JScrollPane();
        jTextPaneLeft = new javax.swing.JTextPane();
        jScrollPaneRight = new javax.swing.JScrollPane();
        jTextPaneRight = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(800, 480));
        setPreferredSize(new java.awt.Dimension(800, 480));

        jToolBar.setFloatable(false);
        jToolBar.setRollover(true);

        jButtonLoadFile1.setText("Load File1");
        jButtonLoadFile1.setFocusable(false);
        jButtonLoadFile1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonLoadFile1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonLoadFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadFile1ActionPerformed(evt);
            }
        });
        jToolBar.add(jButtonLoadFile1);

        jButtonLoadFile2.setText("Load File2");
        jButtonLoadFile2.setFocusable(false);
        jButtonLoadFile2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonLoadFile2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonLoadFile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadFile2ActionPerformed(evt);
            }
        });
        jToolBar.add(jButtonLoadFile2);

        jLayeredPanelGrid.setLayout(new java.awt.GridLayout(1, 2));

        jTextPaneLeft.setEditable(false);
        jScrollPaneLeft.setViewportView(jTextPaneLeft);

        jLayeredPanelGrid.add(jScrollPaneLeft);

        jTextPaneRight.setEditable(false);
        jScrollPaneRight.setViewportView(jTextPaneRight);

        jLayeredPanelGrid.add(jScrollPaneRight);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPanelGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPanelGrid)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadFile1ActionPerformed
        controller.loadFileLeft();
    }//GEN-LAST:event_jButtonLoadFile1ActionPerformed

    private void jButtonLoadFile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadFile2ActionPerformed
        controller.loadFileRight();
    }//GEN-LAST:event_jButtonLoadFile2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLoadFile1;
    private javax.swing.JButton jButtonLoadFile2;
    private javax.swing.JLayeredPane jLayeredPanelGrid;
    private javax.swing.JScrollPane jScrollPaneLeft;
    private javax.swing.JScrollPane jScrollPaneRight;
    private javax.swing.JTextPane jTextPaneLeft;
    private javax.swing.JTextPane jTextPaneRight;
    private javax.swing.JToolBar jToolBar;
    // End of variables declaration//GEN-END:variables
    
    private TextLineNumber textLineNumberLeft;
    private TextLineNumber textLineNumberRight;
    
    private void myInitComponents() {
        setLocationRelativeTo(null);
        textLineNumberLeft = new TextLineNumber(jTextPaneLeft);
        textLineNumberRight = new TextLineNumber(jTextPaneRight);
        jScrollPaneLeft.setRowHeaderView( textLineNumberLeft );
        jScrollPaneRight.setRowHeaderView( textLineNumberRight );
        //jTextPaneLeft.setLineWrap(true);
        //jTextPaneRight.setLineWrap(true);
    }
    
    public void setJTextAreaLeftText(String text){
        jTextPaneLeft.setText(text);
    }

    public void setJTextAreaRightText(String text) {
        jTextPaneRight.setText(text);
    }

    public void colorJTextAreaLeftText(int[] lcs) {
        for(int i = 0; i < lcs.length; i++){
            System.out.print(lcs[i]+ " ");
        }
        System.out.println();
        jTextPaneRight.setForeground(Color.red);
    }
    
    public void colorJTextAreaRightText(int[] lcs) {
        for(int i = 0; i < lcs.length; i++){
            System.out.print(lcs[i]+ " ");
        }
        System.out.println();
    }
}
